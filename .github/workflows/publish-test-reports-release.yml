name: Publish Release smoke test report
on:
  workflow_dispatch:
    inputs:
      run_id:
        description: Smoke test release workflow run ID.
        required: true
      run_number:
        description: Smoke test release workflow run number.
        required: true
      release_tag:
        description: WooCommerce release tag.
        required: true
      api_artifact:
        description: API test report artifact.
        required: true
      e2e_artifact:
        description: E2E test report artifact.
        required: true
      env_description:
        description: WP environment description.
        required: true
        default: WP Latest
        type: choice
        options:
          - WP Latest
          - WP Latest-1
          - WP Latest-2
          - PHP 7.4
          - PHP 8.0
          - PHP 8.1
          - WooCommerce Payments
          - WooCommerce PayPal Payments
          - WooCommerce Shipping & Tax
          - WooCommerce Subscriptions
          - WordPress SEO
          - Contact Form 7
      s3_path:
        required: true
        default: test/release/unversioned/wp-latest
concurrency:
  group: ${{ github.event.inputs.s3_path }}
  cancel-in-progress: true

jobs:
  publish_release_test_reports:
    name: Publish release smoke test reports
    runs-on: ubuntu-20.04
    env:
      RUN_ID: ${{ github.event.inputs.run_id }}
      RUN_NUMBER: ${{ github.event.inputs.run_number }}
      RELEASE_TAG: ${{ github.event.inputs.release_tag }}
      API_ARTIFACT: ${{ github.event.inputs.api_artifact }}
      E2E_ARTIFACT: ${{ github.event.inputs.e2e_artifact }}
      ENV_DESCRIPTION: ${{ github.event.inputs.env_description }}
      S3_PATH: ${{ github.event.inputs.s3_path }}
      GITHUB_TOKEN: ${{ github.token }}
    steps:
      - name: Create dirs
        run: |
          mkdir -p repo
          mkdir -p artifacts/api
          mkdir -p artifacts/e2e
          mkdir -p s3/api
          mkdir -p s3/e2e
          mkdir -p output/api
          mkdir -p output/e2e

      - name: Checkout this repo
        uses: actions/checkout@v3
        with:
          path: repo
          token: ${{ secrets.REPORTS_TOKEN }}

      - name: Install allure-commandline package
        run: npm install -g allure-commandline

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # ####################
      # API Test Report
      # ####################
      - name: Download API test report artifact
        env:
          SOURCE: ${{ secrets.S3_BUCKET_URL }}/artifacts/${{ env.RUN_ID }}/${{ env.API_ARTIFACT }}
          DESTINATION: artifacts/api
        run: aws s3 cp $SOURCE $DESTINATION --recursive

      - name: Download existing API test report from S3 bucket
        working-directory: repo/.github/workflows/scripts
        id: api-s3-download
        env:
          SOURCE: ${{ secrets.S3_BUCKET_URL }}/${{ env.S3_PATH }}/api
          DESTINATION: ${{ github.workspace }}/s3/api
        run: bash s3-download-report.sh

      - name: Prepare first API report for upload
        if: fromJSON( steps.api-s3-download.outputs.HAS_PREVIOUS_REPORT ) != true
        run: cp -r artifacts/api/allure-report/* output/api

      - name: Regenerate API test report with history
        if: fromJSON( steps.api-s3-download.outputs.HAS_PREVIOUS_REPORT )
        working-directory: repo/.github/workflows/scripts
        env:
          OLD_ALLURE_REPORT_PATH: ${{ github.workspace }}/s3/api
          NEW_ALLURE_RESULTS_PATH: ${{ github.workspace }}/artifacts/api/allure-results
          OUTPUT_PATH: ${{ github.workspace }}/output/api
        run: bash regenerate-report-v2.sh

      - name: Set API report title
        working-directory: repo/.github/workflows/scripts
        env:
          REPORT_TITLE: API Tests on WooCommerce ${{ env.RELEASE_TAG }} with ${{ env.ENV_DESCRIPTION }} (run ${{ env.RUN_NUMBER }})
          INDEX_HTML_PATH: ${{ github.workspace }}/output/api/index.html
          SUMMARY_JSON_PATH: ${{ github.workspace }}/output/api/widgets/summary.json
        run: node change-report-title.js

      # ####################
      # E2E Test Report
      # ####################
      - name: Download E2E test report artifact
        env:
          SOURCE: ${{ secrets.S3_BUCKET_URL }}/artifacts/${{ env.RUN_ID }}/${{ env.E2E_ARTIFACT }}
          DESTINATION: artifacts/e2e
        run: aws s3 cp $SOURCE $DESTINATION --recursive

      - name: Download existing E2E test report from S3 bucket
        working-directory: repo/.github/workflows/scripts
        id: e2e-s3-download
        env:
          SOURCE: ${{ secrets.S3_BUCKET_URL }}/${{ env.S3_PATH }}/e2e
          DESTINATION: ${{ github.workspace }}/s3/e2e
        run: bash s3-download-report.sh

      - name: Prepare first E2E report for upload
        if: fromJSON( steps.e2e-s3-download.outputs.HAS_PREVIOUS_REPORT ) != true
        run: cp -r artifacts/e2e/allure-report/* output/e2e

      - name: Regenerate E2E test report with history
        if: fromJSON( steps.e2e-s3-download.outputs.HAS_PREVIOUS_REPORT )
        working-directory: repo/.github/workflows/scripts
        env:
          OLD_ALLURE_REPORT_PATH: ${{ github.workspace }}/s3/e2e
          NEW_ALLURE_RESULTS_PATH: ${{ github.workspace }}/artifacts/e2e/allure-results
          OUTPUT_PATH: ${{ github.workspace }}/output/e2e
        run: bash regenerate-report-v2.sh

      - name: Set E2E report title
        working-directory: repo/.github/workflows/scripts
        env:
          REPORT_TITLE: E2E Tests on WooCommerce ${{ env.RELEASE_TAG }} with ${{ env.ENV_DESCRIPTION }} (run ${{ env.RUN_NUMBER }})
          INDEX_HTML_PATH: ${{ github.workspace }}/output/e2e/index.html
          SUMMARY_JSON_PATH: ${{ github.workspace }}/output/e2e/widgets/summary.json
        run: node change-report-title.js

      - name: Upload test reports to S3 bucket
        env:
          API_DESTINATION: ${{ secrets.S3_BUCKET_URL }}/${{ env.S3_PATH }}/api
          E2E_DESTINATION: ${{ secrets.S3_BUCKET_URL }}/${{ env.S3_PATH }}/e2e
        run: |
          aws s3 sync output/api $API_DESTINATION --delete
          aws s3 sync output/e2e $E2E_DESTINATION --delete

      - name: Create or update index.md file for API test report
        working-directory: repo/.github/workflows/scripts
        env:
          TEST_TYPE: api
          S3_WEB_ENDPOINT: ${{ secrets.S3_WEB_ENDPOINT }}
        run: bash release-set-index-md.sh

      - name: Create or update index.md file for E2E test report
        working-directory: repo/.github/workflows/scripts
        env:
          TEST_TYPE: e2e
          S3_WEB_ENDPOINT: ${{ secrets.S3_WEB_ENDPOINT }}
        run: bash release-set-index-md.sh

      - name: Push changes to branch
        working-directory: repo/.github/workflows/scripts
        env:
          GITHUB_USER: ${{ secrets.REPORTS_USER }}
          GITHUB_EMAIL: ${{ secrets.REPORTS_EMAIL }}
          GITHUB_TOKEN: ${{ secrets.REPORTS_TOKEN }}
          BOT_COMMIT_MESSAGE: 'Add test report - PR #${{ env.PR_NUMBER }} - ${{ env.COMMIT_MESSAGE }}'
        run: bash push-changes-to-repo.sh

      - name: Delete artifacts from bucket
        run: aws s3 rm ${{ secrets.S3_BUCKET_URL }}/artifacts/${{ env.RUN_ID }} --recursive
