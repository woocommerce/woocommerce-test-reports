name: Publish Release test report
on:
  workflow_dispatch:
    inputs:
      created_at:
        description: Creation date of the WooCommerce release zip.
        required: true
      run_id:
        description: Smoke test release workflow run ID.
        required: true
      run_number:
        description: Smoke test release workflow run number.
        required: true
      release_tag:
        description: WooCommerce release tag.
        required: true
      artifact:
        description: Allure report artifact.
        required: true
      test_type:
        description: e2e or api
        required: true
        type: choice
        options:
          - api
          - e2e
      env_description:
        description: WP environment description.
        required: true
        default: wp-latest
        type: choice
        options:
          - wp-latest
          - wp-latest-1
          - wp-latest-2
          - php-7.4
          - php-8.0
          - php-8.1
      s3_path:
        required: true
        default: test/release/unversioned/wp-latest
concurrency:
  group: ${{ github.event.inputs.release_tag }}-${{ github.event.inputs.env_description }}-${{ github.event.inputs.test_type }}
  cancel-in-progress: true

jobs:
  publish_release_test_reports:
    name: Publish ${{ github.event.inputs.test_type }} report on WooCommerce ${{ github.event.inputs.release_tag }} on ${{ github.event.inputs.env_description }}
    runs-on: ubuntu-20.04
    env:
      RUN_ID: ${{ github.event.inputs.run_id }}
      CREATED_AT: ${{ github.event.inputs.created_at }}
      RUN_NUMBER: ${{ github.event.inputs.run_number }}
      RELEASE_TAG: ${{ github.event.inputs.release_tag }}
      ARTIFACT: ${{ github.event.inputs.artifact }}
      ENV_DESCRIPTION: ${{ github.event.inputs.env_description }}
      S3_PATH: ${{ github.event.inputs.s3_path }}
      TEST_TYPE: ${{ github.event.inputs.test_type }}
      GITHUB_TOKEN: ${{ github.token }}
    steps:
      - name: Create dirs
        run: |
          mkdir -p repo
          mkdir -p artifact
          mkdir -p s3
          mkdir -p output

      - name: Checkout this repo
        uses: actions/checkout@v3
        with:
          path: repo
          token: ${{ secrets.REPORTS_TOKEN }}

      - name: Install allure-commandline package
        run: npm install -g allure-commandline

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Download artifact
        env:
          SOURCE: ${{ secrets.S3_BUCKET_URL }}/artifacts/${{ env.RUN_ID }}/${{ env.ARTIFACT }}
          DESTINATION: artifact
        run: aws s3 cp $SOURCE $DESTINATION --recursive

      - name: See if tests passed
        id: is-passed
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            const { statistic } = require('./artifact/allure-report/widgets/summary.json');
            const { failed, broken, passed } = statistic;

            if (passed === 0) {
              console.log("No tests passed. Considered FAIL.");
              return false;
            }

            if (failed + broken > 0) {
              console.log("There were failed and/or broken tests. Considered FAIL.");
              return false;
            }

            if (passed > 0) {
              console.log("Tests passed, no failures. Considered PASS.");
              return true;
            }

            console.log("Unknown status.");
            return;

      - name: Download existing report from S3 bucket
        working-directory: repo/.github/workflows/scripts
        id: s3-download
        env:
          SOURCE: ${{ secrets.S3_BUCKET_URL }}/${{ env.S3_PATH }}/${{ env.TEST_TYPE }}
          DESTINATION: ${{ github.workspace }}/s3
        run: bash s3-download-report.sh

      - name: Prepare first Allure report for upload
        if: fromJSON( steps.s3-download.outputs.HAS_PREVIOUS_REPORT ) != true
        run: cp -r artifact/allure-report/* output

      - name: Regenerate Allure report with history
        if: fromJSON( steps.s3-download.outputs.HAS_PREVIOUS_REPORT )
        working-directory: repo/.github/workflows/scripts
        env:
          OLD_ALLURE_REPORT_PATH: ${{ github.workspace }}/s3
          NEW_ALLURE_RESULTS_PATH: ${{ github.workspace }}/artifact/allure-results
          OUTPUT_PATH: ${{ github.workspace }}/output
        run: bash regenerate-report-v2.sh

      - name: Set report title
        working-directory: repo/.github/workflows/scripts
        env:
          REPORT_TITLE: ${{ env.TEST_TYPE }} Tests on WooCommerce ${{ env.RELEASE_TAG }} with ${{ env.ENV_DESCRIPTION }} (run ${{ env.RUN_NUMBER }})
          INDEX_HTML_PATH: ${{ github.workspace }}/output/index.html
          SUMMARY_JSON_PATH: ${{ github.workspace }}/output/widgets/summary.json
        run: node change-report-title.js

      - name: Create PR and merge
        working-directory: repo/.github/workflows/scripts
        env:
          GITHUB_USER: ${{ secrets.REPORTS_USER }}
          GITHUB_EMAIL: ${{ secrets.REPORTS_EMAIL }}
          GITHUB_TOKEN: ${{ secrets.REPORTS_TOKEN }}
          BOT_COMMIT_MESSAGE: 'Add: Release ${{ env.RELEASE_TAG }} ${{ env.TEST_TYPE }} test on ${{ env.ENV_DESCRIPTION }}'
        run: bash merge-changes-to-trunk.sh

      - name: Delete artifact from bucket
        run: aws s3 rm ${{ secrets.S3_BUCKET_URL }}/artifacts/${{ env.RUN_ID }}/${{ env.ARTIFACT }} --recursive
